// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Fs          = require("fs");
var List        = require("bs-platform/lib/js/list.js");
var $$Array     = require("bs-platform/lib/js/array.js");
var Pervasives  = require("bs-platform/lib/js/pervasives.js");
var Caml_format = require("bs-platform/lib/js/caml_format.js");

var rows = $$Array.map((function (row) {
        return $$Array.map(Caml_format.caml_int_of_string, row.split("\t"));
      }), Fs.readFileSync("./src/day2/input.txt", "utf8").split("\n"));

var maxPerRow = $$Array.map((function (row) {
        return $$Array.fold_left(Pervasives.max, 0, row);
      }), rows);

var minPerRow = $$Array.map((function (row) {
        return $$Array.fold_left(Pervasives.min, 1316134911, row);
      }), rows);

var minAndMaxPerRow = List.combine($$Array.to_list(maxPerRow), $$Array.to_list(minPerRow));

var diffPerRow = List.map((function (param) {
        return param[0] - param[1] | 0;
      }), minAndMaxPerRow);

var sumOfDiff = List.fold_left((function (acc, x) {
        return acc + x | 0;
      }), 0, diffPerRow);

console.log("SUM: " + Pervasives.string_of_int(sumOfDiff));

exports.rows            = rows;
exports.maxPerRow       = maxPerRow;
exports.minPerRow       = minPerRow;
exports.minAndMaxPerRow = minAndMaxPerRow;
exports.diffPerRow      = diffPerRow;
exports.sumOfDiff       = sumOfDiff;
/* rows Not a pure module */
